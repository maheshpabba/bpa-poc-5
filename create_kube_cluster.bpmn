<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1py2yo9" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.9.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:process id="create_AKS_Cluster" name="create_AKS_Cluster" isExecutable="true">
    <bpmn:startEvent id="Event_1i7qpz5">
      <bpmn:outgoing>Flow_1uita4a</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:serviceTask id="Activity_0t972gu" name="Login to MicrosoftOnline to fetch access token">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">https://login.microsoftonline.com/${TenantId}/oauth2/token</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/x-www-form-urlencoded</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var data = {
    "client_id": execution.getVariable("ClientId"),
    "client_secret": execution.getVariable("ClientSecret"),
    "resource": execution.getVariable("ToResource"),
    "grant_type": "client_credentials"
    };

// Converts the JSON into a MailGun friendly params string
Content = Object.keys(data).map(function(k) {
    return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])
}).join('&amp;')

Content;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="access_token">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var jsonResp = S(response);
token=jsonResp.prop("access_token").value();
} catch(err) {
print(err);
}
token</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_06ytd2h</bpmn:incoming>
      <bpmn:outgoing>Flow_1o1hjqh</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:scriptTask id="Activity_1a8w8ti" name="Process Form Variables" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_1uita4a</bpmn:incoming>
      <bpmn:outgoing>Flow_06ytd2h</bpmn:outgoing>
      <bpmn:script>print(execution.getProcessInstanceId() + " Workflow Started");
var workflowStatus = "active";

var tenantid = "d1460471-811c-41db-81dc-b9f627bd8532";
var client_id = "72ec4c26-953f-438b-a6c0-d8b6cb4f9320";
var client_secret = "Hgp.XY__Tbc7LF8_1Kz_09qOqB3WPMowFB";
var resource = "https://management.azure.com/";
var resourcename = "testkcluster1";
var sshkeyname = "testkubsshkey1"


execution.setVariable("TenantId", tenantid);
execution.setVariable("ClientId", client_id);
execution.setVariable("ClientSecret", client_secret);
execution.setVariable("ToResource", resource);
execution.setVariable("rname", resourcename);
execution.setVariable("sshPublicKeyName",sshkeyname);

print("tenant Id: " + tenantid);
print("client_id: " + client_id);
print("client_secret: " + client_secret);
print("Resource name is: " + resource);
print("The Cluster Name is : " + resourcename);
print("The SSH Keyname is: " + sshkeyname);
</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Activity_0jrwjj1" name="Fetch Subscription">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions?api-version=2020-01-01</camunda:inputParameter>
            <camunda:outputParameter name="subscription_id">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr = S(response).prop("value").elements().get(0).prop("subscriptionId").value();
} catch(err) {
print(err);
}
arr</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1o1hjqh</bpmn:incoming>
      <bpmn:outgoing>Flow_0t2l4x2</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1uita4a" sourceRef="Event_1i7qpz5" targetRef="Activity_1a8w8ti" />
    <bpmn:sequenceFlow id="Flow_06ytd2h" sourceRef="Activity_1a8w8ti" targetRef="Activity_0t972gu" />
    <bpmn:sequenceFlow id="Flow_1o1hjqh" sourceRef="Activity_0t972gu" targetRef="Activity_0jrwjj1" />
    <bpmn:sequenceFlow id="Flow_0t2l4x2" sourceRef="Activity_0jrwjj1" targetRef="Activity_1qs50in" />
    <bpmn:scriptTask id="Activity_1mfpaoq" name="Print the subscription ID &#38; Resource Group" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_0k8w9pa</bpmn:incoming>
      <bpmn:outgoing>Flow_1fp0ljo</bpmn:outgoing>
      <bpmn:script>//print("The subscription id from previous task is :" + subscription_id);
//print("the Resource Group Name from previous task is : " + rgname);
//print("the location Name from previous task is : " + location);
//print("The PublicKey from previous task is : " + pubkey);
print("The Kubernetes Cluster Provisioning State is : " + provisioning);</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Activity_1qs50in" name="Fetch Resource Group and Location">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourcegroups?api-version=2021-04-01</camunda:inputParameter>
            <camunda:outputParameter name="location">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("value").elements().get(0).prop("location").value();
} catch(err){
print(err);
}
arr</camunda:script>
            </camunda:outputParameter>
            <camunda:outputParameter name="rgname">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("value").elements().get(0).prop("name").value();
} catch(err) {
print(err);
}
arr

</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0t2l4x2</bpmn:incoming>
      <bpmn:outgoing>Flow_1wotufx</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:endEvent id="Event_1bci516">
      <bpmn:incoming>Flow_1fp0ljo</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_1v3da2q" name="Create the Kubernetes Cluster">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var data = {
    "location": "eastus",
    "tags": {
      "tier": "development",
      "archv2": ""
    },
    "sku": {
      "name": "Basic",
      "tier": "Free"
    },
    "properties": {
      "kubernetesVersion": "1.20.7",
      "dnsPrefix": "testkcluster1-dns",
      "agentPoolProfiles": [
        {
          "name": "nodepool1",
          "count": 3,
          "vmSize": "Standard_DS2_v2",
          "osType": "Linux",
          "type": "VirtualMachineScaleSets",
          "availabilityZones": [
            "1",
            "2",
            "3"
          ],
          "enableNodePublicIP": true,
          "mode": "System"
        }
      ],
      "linuxProfile": {
        "adminUsername": "kubeuser",
        "ssh": {
          "publicKeys": [
            {
              "keyData": pubkey
            }
          ]
        }
      },
      "networkProfile": {
        "loadBalancerSku": "standard",
        "networkPlugin": "kubenet",
        "networkPolicy": "calico",
        "outboundType": "loadBalancer",
        "loadBalancerProfile": {
          "managedOutboundIPs": {
            "count": 2
          }
        }
      },
      "servicePrincipalProfile": {
        "clientId": execution.getVariable("ClientId"),
        "secret": execution.getVariable("ClientSecret")
      },
      "enableRBAC": true,
      "enablePodSecurityPolicy": false
    },
    "identity": {
      "type": "SystemAssigned"
    }
  };
JSON.stringify(data);</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PUT</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.ContainerService/managedClusters/${rname}?api-version=2021-05-01</camunda:inputParameter>
            <camunda:outputParameter name="provisioning">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
print(S(response));
try{
var arr=S(response).prop("properties").prop("provisioningState").value();
} catch(err) {
print(err);
}
arr
</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_18gfes4</bpmn:incoming>
      <bpmn:outgoing>Flow_0k8w9pa</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1fp0ljo" sourceRef="Activity_1mfpaoq" targetRef="Event_1bci516" />
    <bpmn:sequenceFlow id="Flow_1wotufx" sourceRef="Activity_1qs50in" targetRef="Activity_1a3ubge" />
    <bpmn:serviceTask id="Activity_1a3ubge" name="Create SSH Key">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var data = {
  "location": location
};
JSON.stringify(data);</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.Compute/sshPublicKeys/${sshPublicKeyName}?api-version=2021-03-01</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PUT</camunda:inputParameter>
            <camunda:outputParameter name="pubkey">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("properties").prop("publicKey").value();
print(arr);
} catch(err) {
print(err);
}
arr
</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1wotufx</bpmn:incoming>
      <bpmn:outgoing>Flow_0e4ewq4</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0e4ewq4" sourceRef="Activity_1a3ubge" targetRef="Activity_10xqwch" />
    <bpmn:sequenceFlow id="Flow_0k8w9pa" sourceRef="Activity_1v3da2q" targetRef="Activity_1mfpaoq" />
    <bpmn:serviceTask id="Activity_10xqwch" name="Generate Key Pair">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var data = {
  "location": location
};
JSON.stringify(data);</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.Compute/sshPublicKeys/${sshPublicKeyName}/generateKeyPair?api-version=2021-03-01</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:outputParameter name="pubkey">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("publicKey").value();
} catch(err) {
print(err);
}
print(arr);
arr
</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0e4ewq4</bpmn:incoming>
      <bpmn:outgoing>Flow_18gfes4</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_18gfes4" sourceRef="Activity_10xqwch" targetRef="Activity_1v3da2q" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="create_AKS_Cluster">
      <bpmndi:BPMNEdge id="Flow_0k8w9pa_di" bpmnElement="Flow_0k8w9pa">
        <di:waypoint x="1040" y="200" />
        <di:waypoint x="1040" y="180" />
        <di:waypoint x="1020" y="180" />
        <di:waypoint x="1020" y="160" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_18gfes4_di" bpmnElement="Flow_18gfes4">
        <di:waypoint x="950" y="320" />
        <di:waypoint x="950" y="300" />
        <di:waypoint x="1040" y="300" />
        <di:waypoint x="1040" y="280" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0e4ewq4_di" bpmnElement="Flow_0e4ewq4">
        <di:waypoint x="850" y="290" />
        <di:waypoint x="850" y="305" />
        <di:waypoint x="910" y="305" />
        <di:waypoint x="910" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1wotufx_di" bpmnElement="Flow_1wotufx">
        <di:waypoint x="850" y="160" />
        <di:waypoint x="850" y="185" />
        <di:waypoint x="810" y="185" />
        <di:waypoint x="810" y="210" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1fp0ljo_di" bpmnElement="Flow_1fp0ljo">
        <di:waypoint x="1070" y="120" />
        <di:waypoint x="1152" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0t2l4x2_di" bpmnElement="Flow_0t2l4x2">
        <di:waypoint x="730" y="120" />
        <di:waypoint x="800" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1o1hjqh_di" bpmnElement="Flow_1o1hjqh">
        <di:waypoint x="550" y="120" />
        <di:waypoint x="630" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_06ytd2h_di" bpmnElement="Flow_06ytd2h">
        <di:waypoint x="370" y="120" />
        <di:waypoint x="450" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1uita4a_di" bpmnElement="Flow_1uita4a">
        <di:waypoint x="218" y="120" />
        <di:waypoint x="270" y="120" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_1i7qpz5_di" bpmnElement="Event_1i7qpz5">
        <dc:Bounds x="182" y="102" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0t972gu_di" bpmnElement="Activity_0t972gu">
        <dc:Bounds x="450" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1a8w8ti_di" bpmnElement="Activity_1a8w8ti">
        <dc:Bounds x="270" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0jrwjj1_di" bpmnElement="Activity_0jrwjj1">
        <dc:Bounds x="630" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1x8u4ez_di" bpmnElement="Activity_1mfpaoq">
        <dc:Bounds x="970" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1qs50in_di" bpmnElement="Activity_1qs50in">
        <dc:Bounds x="800" y="80" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1bci516_di" bpmnElement="Event_1bci516">
        <dc:Bounds x="1152" y="102" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_067k6cp_di" bpmnElement="Activity_1v3da2q">
        <dc:Bounds x="990" y="200" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0b96vre_di" bpmnElement="Activity_1a3ubge">
        <dc:Bounds x="800" y="210" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_10xqwch_di" bpmnElement="Activity_10xqwch">
        <dc:Bounds x="900" y="320" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
