<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bioc="http://bpmn.io/schema/bpmn/biocolor/1.0" xmlns:color="http://www.omg.org/spec/BPMN/non-normative/color/1.0" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_1py2yo9" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.9.0" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
  <bpmn:error id="Error_0ajlbqt" name="RuntimeError" errorCode="java.lang.RuntimeException" />
  <bpmn:error id="Error_0hyb2by" name="RuntimeError" errorCode="java.lang.RuntimeException" />
  <bpmn:error id="Error_16gp3q2" name="error" errorCode="java.lang.runtime." />
  <bpmn:error id="Error_1jjn8a7" name="Error_1mg410s" />
  <bpmn:error id="Error_0x3mscn" name="Error_36b0md0" />
  <bpmn:error id="Error_1xsrsmi" name="Error_0vqqn3s" />
  <bpmn:error id="Error_1hefqe6" name="Error_3qko6fq" />
  <bpmn:error id="Error_1mdt6jn" name="Error_28uuoun" />
  <bpmn:error id="Error_140sn4g" name="Error_20g2i7c" />
  <bpmn:error id="Error_1n59o2x" name="Error_0savo2b" />
  <bpmn:error id="Error_1q1b63q" name="Error_3337l9s" />
  <bpmn:collaboration id="Collaboration_0wu1azv">
    <bpmn:participant id="Participant_1i2dn3o" name="Delete Kubernetes Cluster" processRef="delete_AKS_Cluster" />
  </bpmn:collaboration>
  <bpmn:process id="delete_AKS_Cluster" name="delete_AKS_Cluster" isExecutable="true">
    <bpmn:laneSet id="LaneSet_0np6oz1" />
    <bpmn:sequenceFlow id="Flow_1w5rb2i" name="Deleting" sourceRef="Activity_1wb5cp6" targetRef="Event_03ya4e8">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${state}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1fkmw2p" sourceRef="Event_03ya4e8" targetRef="Activity_1wb5cp6" />
    <bpmn:startEvent id="Event_04qrmbu">
      <bpmn:outgoing>Flow_1abitpa</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:scriptTask id="Activity_1gbksbg" name="Process Form Variables" scriptFormat="JavaScript">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:outputParameter name="milestonesCollection">
            <camunda:script scriptFormat="JavaScript">var milestonesCollection = [{
  "key": "OrderPlaced",
  "value": "Order Placed"
},{
  "key": "MicrosoftLogin",
  "value": "Login to Microsoft to get JWT Token"
},{
  "key": "DeleteSSHKey",
  "value": "Delete SSH key pair"
},{
  "key": "DeleteKubernetesCluster",
  "value": "Delete the Kubernetes Cluster"
}];
var spinMilestonesCollection = S(JSON.stringify(milestonesCollection)).mapTo("java.util.ArrayList");

spinMilestonesCollection;</camunda:script>
          </camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1abitpa</bpmn:incoming>
      <bpmn:outgoing>Flow_1xyfg94</bpmn:outgoing>
      <bpmn:script>print(execution.getProcessInstanceId() + " Workflow Started");
var formData = execution.getVariable('formData');
formData = S(formData);

//var tenantid = "d1460471-811c-41db-81dc-b9f627bd8532";
//var client_id = "72ec4c26-953f-438b-a6c0-d8b6cb4f9320";
//var client_secret = "Hgp.XY__Tbc7LF8_1Kz_09qOqB3WPMowFB";
//var resource = "https://management.azure.com/";
//var resourcename = "testkcluster1";
//var sshkeyname = "testkubsshkey1";


//execution.setVariable("TenantId",tenantid);
//execution.setVariable("ClientId", client_id);
//execution.setVariable("ClientSecret", client_secret);
//execution.setVariable("ToResource", resource);
//execution.setVariable("rname", resourcename);
//execution.setVariable("sshPublicKeyName",sshkeyname);

execution.setVariable("TenantId",formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("tenantid").value());
execution.setVariable("ClientId", formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("client_id").value());
execution.setVariable("ClientSecret", formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("client_secret").value());
execution.setVariable("ToResource", formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("resource").value());
execution.setVariable("rname", formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("resourcename").value());
execution.setVariable("sshPublicKeyName",formData.prop("create").elements().get(0).prop("createKubeCluster").elements().get(0).prop("sshkeyname").value());

print("tenant Id: " + TenantId);
print("client_id: " + ClientId);
print("client_secret: " + ClientSecret);
print("Resource name is: " + ToResource);
print("The Cluster Name is : " + rname);
print("The SSH Keyname is: " + sshPublicKeyName);</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Activity_1ovot92" name="Define Milestones">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">https://milestones-ms:9211/api/v1.0/milestones</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="JavaScript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
var sessionID = execution.getVariable("x-session-id");
header.put("Content-Type", "application/json"); 
header.put("accept", "application/json"); 
header.put("Connection", "keep-alive"); 
header.put("x-correlation-id", correlationID); 
header.put("x-session-id", sessionID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">print();
print('Initialize milestone: ' + milestone);

var req = {
    'objectType': 'service-catalog-order',
    'objectReference': orderId,
    'milestone': milestone.value,
    'status': 'Pending'
};

var payload = JSON.stringify(req);
print('Milestone payload =&gt; ' + payload);

payload;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="DefineMilestoneResponse">
              <camunda:script scriptFormat="JavaScript">try {
    var defineMilestoneResp = S(response);
    print('Milestone task response =&gt; ' + defineMilestoneResp);
    connector.setVariable(milestone.key, defineMilestoneResp.prop('data').prop('_id').value());
    defineMilestoneResp;
} catch (err) {
    print('Milestone initialization failed. Error =&gt; ' + err.message);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1xyfg94</bpmn:incoming>
      <bpmn:outgoing>Flow_1oyn45y</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" camunda:asyncAfter="true" camunda:exclusive="false" camunda:collection="milestonesCollection" camunda:elementVariable="milestone" />
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1q3tr7y" name="Milestone Order Placed">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var url = 'https://milestones-ms:9211/api/v1.0/milestones/' + OrderPlaced;
print();
print('Set Milestone "Order Placed" to Complete =&gt; ' + url);

url;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="JavaScript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
header.put("Content-Type","application/json");
header.put("accept","application/json");
header.put("Connection","keep-alive");
header.put("x-correlation-id",correlationID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">print();
print('Inside Payload =&gt;');

var req = {
  'status': 'Complete'
};

var payload = JSON.stringify(req);
print('Milestone payload =&gt; ' + payload);

var currDate = new Date();
print('currDate: ' + currDate);
execution.setVariable('orderPlacedTS', currDate.getTime());
print('orderPlacedTS: ' + execution.getVariable('orderPlacedTS'));

payload;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="milestoneResponse">
              <camunda:script scriptFormat="JavaScript">if (statusCode == 200) {
  print('Milestone response =&gt; ' + S(response));
} else {
  print("Milestone initialization failed. Error =&gt; "+response);
  throw org.camunda.bpm.engine.delegate.BpmnError("serviceCatalogError", execution.getCurrentActivityName() + " " + response);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1oyn45y</bpmn:incoming>
      <bpmn:outgoing>Flow_0k9vo0r</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1abitpa" sourceRef="Event_04qrmbu" targetRef="Activity_1gbksbg" />
    <bpmn:sequenceFlow id="Flow_1xyfg94" sourceRef="Activity_1gbksbg" targetRef="Activity_1ovot92" />
    <bpmn:sequenceFlow id="Flow_1oyn45y" sourceRef="Activity_1ovot92" targetRef="Activity_1q3tr7y" />
    <bpmn:sequenceFlow id="Flow_04c57fy" name="Deleted" sourceRef="Activity_1wb5cp6" targetRef="Activity_1qdqnq8">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${!state}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0q819rg" sourceRef="Activity_1mfpaoq" targetRef="Event_1g7ptzg" />
    <bpmn:sequenceFlow id="Flow_0gb4d73" sourceRef="Activity_1wx9ngg" targetRef="Activity_1wb5cp6" />
    <bpmn:sequenceFlow id="Flow_01k5ykv" name="on Error" sourceRef="Activity_04l6cvf" targetRef="Event_1diauq5">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${onError}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="Activity_04l6cvf" name="Login to MicrosoftOnline to fetch access token">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">https://login.microsoftonline.com/${TenantId}/oauth2/token</camunda:inputParameter>
            <camunda:inputParameter name="method">POST</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/x-www-form-urlencoded</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">var data = {
    "client_id": execution.getVariable("ClientId"),
    "client_secret": execution.getVariable("ClientSecret"),
    "resource": execution.getVariable("ToResource"),
    "grant_type": "client_credentials"
    };

// Converts the JSON into a MailGun friendly params string
Content = Object.keys(data).map(function(k) {
    return encodeURIComponent(k) + '=' + encodeURIComponent(data[k])
}).join('&amp;')

Content;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="onError">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
var onError = false;
try{
var jsonResp = S(response);
token=jsonResp.prop("access_token").value();
if (!token) {
onError = true;
}
} catch(err) {
print(err);
}
onError;</camunda:script>
            </camunda:outputParameter>
            <camunda:outputParameter name="access_token">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var jsonResp = S(response);
token=jsonResp.prop("access_token").value();
} catch(err) {
print(err);
}
token</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0k9vo0r</bpmn:incoming>
      <bpmn:outgoing>Flow_01k5ykv</bpmn:outgoing>
      <bpmn:outgoing>Flow_0knabny</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0k9vo0r" sourceRef="Activity_1q3tr7y" targetRef="Activity_04l6cvf" />
    <bpmn:serviceTask id="Activity_1wb5cp6" name="Get the Kubernetes Cluster state">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.ContainerService/managedClusters/${rname}?api-version=2021-05-01
</camunda:inputParameter>
            <camunda:outputParameter name="state">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
print(S(response));
try{
var arr=S(response).prop("properties").prop("provisioningState").value();
} catch(err) {
print(err);
}
if (arr == "Deleting") {
   status = true;
} else {
   status = false;
}
status;</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0gb4d73</bpmn:incoming>
      <bpmn:incoming>Flow_1fkmw2p</bpmn:incoming>
      <bpmn:outgoing>Flow_04c57fy</bpmn:outgoing>
      <bpmn:outgoing>Flow_1w5rb2i</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1wx9ngg" name="DELETE the Kubernetes Cluster">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">DELETE</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.ContainerService/managedClusters/${rname}?api-version=2021-05-01
</camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1ymckw0</bpmn:incoming>
      <bpmn:outgoing>Flow_0gb4d73</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:intermediateCatchEvent id="Event_03ya4e8" name="3 Minutes Wait Timer">
      <bpmn:incoming>Flow_1w5rb2i</bpmn:incoming>
      <bpmn:outgoing>Flow_1fkmw2p</bpmn:outgoing>
      <bpmn:timerEventDefinition id="TimerEventDefinition_11y9nge">
        <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT3M</bpmn:timeDuration>
      </bpmn:timerEventDefinition>
    </bpmn:intermediateCatchEvent>
    <bpmn:endEvent id="Event_1diauq5">
      <bpmn:incoming>Flow_01k5ykv</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:serviceTask id="Activity_018ujsb" name="Delete SSH Key">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">DELETE</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${rgname}/providers/Microsoft.Compute/sshPublicKeys/${sshPublicKeyName}?api-version=2021-03-01</camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0tqve10</bpmn:incoming>
      <bpmn:outgoing>Flow_0npn7mn</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0knabny" sourceRef="Activity_04l6cvf" targetRef="Activity_0dmqcqz" />
    <bpmn:endEvent id="Event_1g7ptzg" name="End Workflow">
      <bpmn:incoming>Flow_0q819rg</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:scriptTask id="Activity_1mfpaoq" name="Print the details and AKS State" scriptFormat="JavaScript">
      <bpmn:incoming>Flow_1u5lbf3</bpmn:incoming>
      <bpmn:outgoing>Flow_0q819rg</bpmn:outgoing>
      <bpmn:script>//print("The subscription id from previous task is :" + subscription_id);
//print("the Resource Group Name from previous task is : " + rgname);
//print("the location Name from previous task is : " + location);
//print("The PublicKey from previous task is : " + pubkey);
print("The Kubernetes Cluster has been deleted.");</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:serviceTask id="Activity_1qdqnq8" name="Milestone Delete Kubernetes Cluster">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var url = 'https://milestones-ms:9211/api/v1.0/milestones/' + DeleteKubernetesCluster;
print();
print('Set Milestone "Delete Kubernetes Cluster" to Complete =&gt; ' + url);

url;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="JavaScript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
header.put("Content-Type","application/json");
header.put("accept","application/json");
header.put("Connection","keep-alive");
header.put("x-correlation-id",correlationID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">print();
print('Inside Payload =&gt;');

var req = {
  'status': 'Complete'
};

var payload = JSON.stringify(req);
print('Milestone payload =&gt; ' + payload);

var currDate = new Date();
print('currDate: ' + currDate);
execution.setVariable('orderPlacedTS', currDate.getTime());
print('orderPlacedTS: ' + execution.getVariable('orderPlacedTS'));

payload;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="milestoneResponse">
              <camunda:script scriptFormat="JavaScript">if (statusCode == 200) {
  print('Milestone response =&gt; ' + S(response));
} else {
  print("Milestone initialization failed. Error =&gt; "+response);
  throw org.camunda.bpm.engine.delegate.BpmnError("serviceCatalogError", execution.getCurrentActivityName() + " " + response);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_04c57fy</bpmn:incoming>
      <bpmn:outgoing>Flow_0zf36e7</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_0zf36e7" sourceRef="Activity_1qdqnq8" targetRef="Activity_1dbhm62" />
    <bpmn:serviceTask id="Activity_1dbhm62" name="Update Service Order Status to &#39;Complete&#39;" camunda:asyncAfter="true" camunda:exclusive="false">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="javascript">var orderId = execution.getVariable('orderId');
var url = "https://service-catalog-ms:9210/api/v1.0/service-catalog/service-orders/"+ orderId;
url;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PUT</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="javascript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
header.put("Content-Type", "application/json"); 
header.put("accept", "application/json"); 
header.put("Connection", "keep-alive"); 
header.put("x-correlation-id", correlationID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="javascript">print();

formData = JSON.parse(formData);

var req = {
  status: 'Complete',
  configuredDevices: [
      "Kubernetes Cluster Provisioning State is deleted"]};
JSON.stringify(req);</camunda:script>
            </camunda:inputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0zf36e7</bpmn:incoming>
      <bpmn:outgoing>Flow_1u5lbf3</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_1u5lbf3" sourceRef="Activity_1dbhm62" targetRef="Activity_1mfpaoq" />
    <bpmn:serviceTask id="Activity_0dmqcqz" name="Milestone Microsoft Login">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var url = 'https://milestones-ms:9211/api/v1.0/milestones/' + MicrosoftLogin;
print();
print('Set Milestone "Microsoft Login" to Complete =&gt; ' + url);

url;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="JavaScript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
header.put("Content-Type","application/json");
header.put("accept","application/json");
header.put("Connection","keep-alive");
header.put("x-correlation-id",correlationID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">print();
print('Inside Payload =&gt;');

var req = {
  'status': 'Complete'
};

var payload = JSON.stringify(req);
print('Milestone payload =&gt; ' + payload);

var currDate = new Date();
print('currDate: ' + currDate);
execution.setVariable('orderPlacedTS', currDate.getTime());
print('orderPlacedTS: ' + execution.getVariable('orderPlacedTS'));

payload;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="milestoneResponse">
              <camunda:script scriptFormat="JavaScript">if (statusCode == 200) {
  print('Milestone response =&gt; ' + S(response));
} else {
  print("Milestone initialization failed. Error =&gt; "+response);
  throw org.camunda.bpm.engine.delegate.BpmnError("serviceCatalogError", execution.getCurrentActivityName() + " " + response);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0knabny</bpmn:incoming>
      <bpmn:outgoing>Flow_133lstq</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_133lstq" sourceRef="Activity_0dmqcqz" targetRef="Activity_1288xsw" />
    <bpmn:sequenceFlow id="Flow_0npn7mn" sourceRef="Activity_018ujsb" targetRef="Activity_05kruvc" />
    <bpmn:sequenceFlow id="Flow_1ymckw0" sourceRef="Activity_05kruvc" targetRef="Activity_1wx9ngg" />
    <bpmn:serviceTask id="Activity_05kruvc" name="Milestone Delete SSH Key">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="url">
              <camunda:script scriptFormat="JavaScript">var url = 'https://milestones-ms:9211/api/v1.0/milestones/' + DeleteSSHKey;
print();
print('Set Milestone "Delete SSH Key pair" to Complete =&gt; ' + url);

url;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">PATCH</camunda:inputParameter>
            <camunda:inputParameter name="headers">
              <camunda:script scriptFormat="JavaScript">var header = new java.util.HashMap();

var correlationID = execution.getVariable("x-correlation-id");
header.put("Content-Type","application/json");
header.put("accept","application/json");
header.put("Connection","keep-alive");
header.put("x-correlation-id",correlationID);

header;</camunda:script>
            </camunda:inputParameter>
            <camunda:inputParameter name="payload">
              <camunda:script scriptFormat="JavaScript">print();
print('Inside Payload =&gt;');

var req = {
  'status': 'Complete'
};

var payload = JSON.stringify(req);
print('Milestone payload =&gt; ' + payload);

var currDate = new Date();
print('currDate: ' + currDate);
execution.setVariable('orderPlacedTS', currDate.getTime());
print('orderPlacedTS: ' + execution.getVariable('orderPlacedTS'));

payload;</camunda:script>
            </camunda:inputParameter>
            <camunda:outputParameter name="milestoneResponse">
              <camunda:script scriptFormat="JavaScript">if (statusCode == 200) {
  print('Milestone response =&gt; ' + S(response));
} else {
  print("Milestone initialization failed. Error =&gt; "+response);
  throw org.camunda.bpm.engine.delegate.BpmnError("serviceCatalogError", execution.getCurrentActivityName() + " " + response);
}</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0npn7mn</bpmn:incoming>
      <bpmn:outgoing>Flow_1ymckw0</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1288xsw" name="Fetch Subscription">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions?api-version=2020-01-01</camunda:inputParameter>
            <camunda:outputParameter name="subscription_id">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr = S(response).prop("value").elements().get(0).prop("subscriptionId").value();
} catch(err) {
print(err);
}
arr</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_133lstq</bpmn:incoming>
      <bpmn:outgoing>Flow_077yk27</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Activity_1qyp5nn" name="Fetch Resource Group and Location">
      <bpmn:extensionElements>
        <camunda:connector>
          <camunda:inputOutput>
            <camunda:inputParameter name="headers">
              <camunda:map>
                <camunda:entry key="Accept">*/*</camunda:entry>
                <camunda:entry key="content-type">application/json</camunda:entry>
                <camunda:entry key="Authorization">${token}</camunda:entry>
              </camunda:map>
            </camunda:inputParameter>
            <camunda:inputParameter name="method">GET</camunda:inputParameter>
            <camunda:inputParameter name="url">https://management.azure.com/subscriptions/${subscription_id}/resourcegroups?api-version=2021-04-01</camunda:inputParameter>
            <camunda:outputParameter name="location">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("value").elements().get(0).prop("location").value();
} catch(err){
print(err);
}
arr</camunda:script>
            </camunda:outputParameter>
            <camunda:outputParameter name="rgname">
              <camunda:script scriptFormat="JavaScript">var response = connector.getVariable("response");
try{
var arr=S(response).prop("value").elements().get(0).prop("name").value();
} catch(err) {
print(err);
}
arr</camunda:script>
            </camunda:outputParameter>
          </camunda:inputOutput>
          <camunda:connectorId>http-connector</camunda:connectorId>
        </camunda:connector>
        <camunda:inputOutput>
          <camunda:inputParameter name="token">
            <camunda:script scriptFormat="JavaScript">var token = "Bearer "; 
token += access_token;
token;</camunda:script>
          </camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_077yk27</bpmn:incoming>
      <bpmn:outgoing>Flow_0tqve10</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="Flow_077yk27" sourceRef="Activity_1288xsw" targetRef="Activity_1qyp5nn" />
    <bpmn:sequenceFlow id="Flow_0tqve10" sourceRef="Activity_1qyp5nn" targetRef="Activity_018ujsb" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_0wu1azv">
      <bpmndi:BPMNShape id="Participant_1i2dn3o_di" bpmnElement="Participant_1i2dn3o" isHorizontal="true">
        <dc:Bounds x="201" y="80" width="1699" height="710" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1fkmw2p_di" bpmnElement="Flow_1fkmw2p">
        <di:waypoint x="1342" y="190" />
        <di:waypoint x="1300" y="190" />
        <di:waypoint x="1300" y="320" />
        <di:waypoint x="1330" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1w5rb2i_di" bpmnElement="Flow_1w5rb2i">
        <di:waypoint x="1410" y="280" />
        <di:waypoint x="1410" y="190" />
        <di:waypoint x="1378" y="190" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1429" y="232" width="41" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1abitpa_di" bpmnElement="Flow_1abitpa">
        <di:waypoint x="363" y="470" />
        <di:waypoint x="425" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xyfg94_di" bpmnElement="Flow_1xyfg94">
        <di:waypoint x="525" y="470" />
        <di:waypoint x="580" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1oyn45y_di" bpmnElement="Flow_1oyn45y">
        <di:waypoint x="680" y="470" />
        <di:waypoint x="745" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_04c57fy_di" bpmnElement="Flow_04c57fy">
        <di:waypoint x="1430" y="320" />
        <di:waypoint x="1500" y="320" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1447" y="302" width="38" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0q819rg_di" bpmnElement="Flow_0q819rg">
        <di:waypoint x="1780" y="320" />
        <di:waypoint x="1822" y="320" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0gb4d73_di" bpmnElement="Flow_0gb4d73">
        <di:waypoint x="1380" y="430" />
        <di:waypoint x="1380" y="360" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_01k5ykv_di" bpmnElement="Flow_01k5ykv">
        <di:waypoint x="940" y="430" />
        <di:waypoint x="940" y="328" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="890" y="373" width="40" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0k9vo0r_di" bpmnElement="Flow_0k9vo0r">
        <di:waypoint x="845" y="470" />
        <di:waypoint x="890" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0knabny_di" bpmnElement="Flow_0knabny">
        <di:waypoint x="970" y="510" />
        <di:waypoint x="970" y="620" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0zf36e7_di" bpmnElement="Flow_0zf36e7">
        <di:waypoint x="1550" y="360" />
        <di:waypoint x="1550" y="390" />
        <di:waypoint x="1590" y="390" />
        <di:waypoint x="1590" y="420" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1u5lbf3_di" bpmnElement="Flow_1u5lbf3">
        <di:waypoint x="1660" y="460" />
        <di:waypoint x="1730" y="460" />
        <di:waypoint x="1730" y="360" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_133lstq_di" bpmnElement="Flow_133lstq">
        <di:waypoint x="1020" y="620" />
        <di:waypoint x="1020" y="200" />
        <di:waypoint x="1080" y="200" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0npn7mn_di" bpmnElement="Flow_0npn7mn">
        <di:waypoint x="1130" y="510" />
        <di:waypoint x="1130" y="660" />
        <di:waypoint x="1210" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1ymckw0_di" bpmnElement="Flow_1ymckw0">
        <di:waypoint x="1310" y="660" />
        <di:waypoint x="1320" y="660" />
        <di:waypoint x="1320" y="500" />
        <di:waypoint x="1330" y="500" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_077yk27_di" bpmnElement="Flow_077yk27">
        <di:waypoint x="1130" y="240" />
        <di:waypoint x="1130" y="300" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0tqve10_di" bpmnElement="Flow_0tqve10">
        <di:waypoint x="1130" y="380" />
        <di:waypoint x="1130" y="430" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_04qrmbu_di" bpmnElement="Event_04qrmbu" bioc:stroke="#000000" bioc:fill="#ffffff" color:background-color="#ffffff" color:border-color="#000000">
        <dc:Bounds x="327" y="452" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1gbksbg_di" bpmnElement="Activity_1gbksbg" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="425" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1ovot92_di" bpmnElement="Activity_1ovot92" bioc:stroke="#8e24aa" bioc:fill="#e1bee7" color:background-color="#e1bee7" color:border-color="#8e24aa">
        <dc:Bounds x="580" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1q3tr7y_di" bpmnElement="Activity_1q3tr7y" bioc:stroke="#43a047" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#43a047">
        <dc:Bounds x="745" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_04l6cvf_di" bpmnElement="Activity_04l6cvf" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="890" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1wb5cp6_di" bpmnElement="Activity_1wb5cp6" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="1330" y="280" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1wx9ngg_di" bpmnElement="Activity_1wx9ngg" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="1330" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_03ya4e8_di" bpmnElement="Event_03ya4e8">
        <dc:Bounds x="1342" y="172" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1373" y="146" width="73" height="27" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1diauq5_di" bpmnElement="Event_1diauq5">
        <dc:Bounds x="922" y="292" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_018ujsb_di" bpmnElement="Activity_018ujsb" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="1080" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1g7ptzg_di" bpmnElement="Event_1g7ptzg" bioc:stroke="#e53935" bioc:fill="#ffcdd2" color:background-color="#ffcdd2" color:border-color="#e53935">
        <dc:Bounds x="1822" y="302" width="36" height="36" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="1806" y="345" width="68" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1x8u4ez_di" bpmnElement="Activity_1mfpaoq" bioc:stroke="#8e24aa" bioc:fill="#e1bee7" color:background-color="#e1bee7" color:border-color="#8e24aa">
        <dc:Bounds x="1680" y="280" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1qdqnq8_di" bpmnElement="Activity_1qdqnq8" bioc:stroke="#43a047" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#43a047">
        <dc:Bounds x="1500" y="280" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1dbhm62_di" bpmnElement="Activity_1dbhm62">
        <dc:Bounds x="1560" y="420" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0dmqcqz_di" bpmnElement="Activity_0dmqcqz" bioc:stroke="#43a047" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#43a047">
        <dc:Bounds x="950" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_05kruvc_di" bpmnElement="Activity_05kruvc" bioc:stroke="#43a047" bioc:fill="#c8e6c9" color:background-color="#c8e6c9" color:border-color="#43a047">
        <dc:Bounds x="1210" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1288xsw_di" bpmnElement="Activity_1288xsw" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="1080" y="160" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1qyp5nn_di" bpmnElement="Activity_1qyp5nn" bioc:stroke="#fb8c00" bioc:fill="#ffe0b2" color:background-color="#ffe0b2" color:border-color="#fb8c00">
        <dc:Bounds x="1080" y="300" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
